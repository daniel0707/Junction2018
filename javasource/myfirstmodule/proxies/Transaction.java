// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Transaction
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject transactionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Transaction";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Transaction_ID("Transaction_ID"),
		Transaction_Tab("MyFirstModule.Transaction_Tab"),
		Transaction_Merchant("MyFirstModule.Transaction_Merchant"),
		Transaction_User("MyFirstModule.Transaction_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Transaction(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Transaction"));
	}

	protected Transaction(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject transactionMendixObject)
	{
		if (transactionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Transaction", transactionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Transaction");

		this.transactionMendixObject = transactionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Transaction.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.Transaction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Transaction.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Transaction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Transaction(context, mendixObject);
	}

	public static myfirstmodule.proxies.Transaction load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Transaction.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Transaction> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Transaction> result = new java.util.ArrayList<myfirstmodule.proxies.Transaction>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Transaction" + xpathConstraint))
			result.add(myfirstmodule.proxies.Transaction.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Transaction_ID
	 */
	public final java.lang.Long getTransaction_ID()
	{
		return getTransaction_ID(getContext());
	}

	/**
	 * @param context
	 * @return value of Transaction_ID
	 */
	public final java.lang.Long getTransaction_ID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Transaction_ID.toString());
	}

	/**
	 * Set value of Transaction_ID
	 * @param transaction_id
	 */
	public final void setTransaction_ID(java.lang.Long transaction_id)
	{
		setTransaction_ID(getContext(), transaction_id);
	}

	/**
	 * Set value of Transaction_ID
	 * @param context
	 * @param transaction_id
	 */
	public final void setTransaction_ID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long transaction_id)
	{
		getMendixObject().setValue(context, MemberNames.Transaction_ID.toString(), transaction_id);
	}

	/**
	 * @return value of Transaction_Tab
	 */
	public final myfirstmodule.proxies.Tab getTransaction_Tab() throws com.mendix.core.CoreException
	{
		return getTransaction_Tab(getContext());
	}

	/**
	 * @param context
	 * @return value of Transaction_Tab
	 */
	public final myfirstmodule.proxies.Tab getTransaction_Tab(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Tab result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Transaction_Tab.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Tab.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Transaction_Tab
	 * @param transaction_tab
	 */
	public final void setTransaction_Tab(myfirstmodule.proxies.Tab transaction_tab)
	{
		setTransaction_Tab(getContext(), transaction_tab);
	}

	/**
	 * Set value of Transaction_Tab
	 * @param context
	 * @param transaction_tab
	 */
	public final void setTransaction_Tab(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Tab transaction_tab)
	{
		if (transaction_tab == null)
			getMendixObject().setValue(context, MemberNames.Transaction_Tab.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Transaction_Tab.toString(), transaction_tab.getMendixObject().getId());
	}

	/**
	 * @return value of Transaction_Merchant
	 */
	public final myfirstmodule.proxies.Merchant getTransaction_Merchant() throws com.mendix.core.CoreException
	{
		return getTransaction_Merchant(getContext());
	}

	/**
	 * @param context
	 * @return value of Transaction_Merchant
	 */
	public final myfirstmodule.proxies.Merchant getTransaction_Merchant(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Merchant result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Transaction_Merchant.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Merchant.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Transaction_Merchant
	 * @param transaction_merchant
	 */
	public final void setTransaction_Merchant(myfirstmodule.proxies.Merchant transaction_merchant)
	{
		setTransaction_Merchant(getContext(), transaction_merchant);
	}

	/**
	 * Set value of Transaction_Merchant
	 * @param context
	 * @param transaction_merchant
	 */
	public final void setTransaction_Merchant(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Merchant transaction_merchant)
	{
		if (transaction_merchant == null)
			getMendixObject().setValue(context, MemberNames.Transaction_Merchant.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Transaction_Merchant.toString(), transaction_merchant.getMendixObject().getId());
	}

	/**
	 * @return value of Transaction_User
	 */
	public final myfirstmodule.proxies.User getTransaction_User() throws com.mendix.core.CoreException
	{
		return getTransaction_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Transaction_User
	 */
	public final myfirstmodule.proxies.User getTransaction_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Transaction_User.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Transaction_User
	 * @param transaction_user
	 */
	public final void setTransaction_User(myfirstmodule.proxies.User transaction_user)
	{
		setTransaction_User(getContext(), transaction_user);
	}

	/**
	 * Set value of Transaction_User
	 * @param context
	 * @param transaction_user
	 */
	public final void setTransaction_User(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.User transaction_user)
	{
		if (transaction_user == null)
			getMendixObject().setValue(context, MemberNames.Transaction_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Transaction_User.toString(), transaction_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return transactionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Transaction that = (myfirstmodule.proxies.Transaction) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Transaction";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
